/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./public/models/XBot.glb 
*/

import React, { useEffect, useRef } from 'react'
import { useAnimations, useFBX, useGLTF } from '@react-three/drei'


export const XBot = (props) => {
  const { animation } = props

  const { nodes, materials } = useGLTF('/models/XBot.glb')
  const xBot = useRef()
  // 加载
  const { animations: TypingAnimation } = useFBX('/animations/Typing.fbx');
  const { animations: FallingAnimation } = useFBX('/animations/Fall.fbx');
  const { animations: StandingAnimation } = useFBX('/animations/Standing.fbx');
  // 命名，以便useEffect中使用
  TypingAnimation[0].name = "Typing";
  FallingAnimation[0].name = "Falling";
  StandingAnimation[0].name = "Standing";
  // 赋予
  const { actions } = useAnimations([TypingAnimation[0], FallingAnimation[0],StandingAnimation[0]], xBot)
  // 执行：useEffect 确保当这个依赖项更新时，相关的动画操作才会执行。
  useEffect(() => {
    actions[animation]?.reset().play();
  }, [actions]);


  return (
    <group ref={xBot} rotation={[-Math.PI / 2, 0, 0]} {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
        <primitive object={nodes.mixamorigHips} />
        <skinnedMesh geometry={nodes.Beta_Joints.geometry} material={materials.Beta_Joints_MAT1} skeleton={nodes.Beta_Joints.skeleton} />
        <skinnedMesh geometry={nodes.Beta_Surface.geometry} material={materials.Beta_HighLimbsGeoSG3} skeleton={nodes.Beta_Surface.skeleton} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/XBot.glb')
